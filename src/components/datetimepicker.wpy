<style lang="less">
  @import "../styles/mixin";

  picker {
    flex: 1;
    width: 100%;

    &.disabled {
      opacity: 0.7;
      pointer-events: none;
    }
  }

  .picker {
    padding: 6px 12px;
    font-size: 14px;
    background-color: #fff;
    box-sizing: border-box;
    .flex-v-center();
    justify-content: space-between;

    &:active {
      background-color: @color-active;
    }

    &.bordered {
      border: .5px solid @border-color;
      border-radius: 4px;
    }

    &.large {
      height: @large;
      font-size: 16px;
    }

    &.normal {
      height: @normal;
    }

    &.small {
      height: @small;
    }

    .icon {
      padding: 0;

      .icon-img {
        width: 10px !important;
        height: 10px !important;
        vertical-align: middle;
      }
    }

    .placeholder {
      color: #999;
    }

    .picker-actions {
      .flex-v-center();
      margin-left: 5px;
    }
  }
</style>

<template>
  <picker
    mode="{{mode}}"
    @change="change"
    value="{{value}}"
    start="{{start}}"
    end="{{end}}"
    fields="{{fields}}"
    class="{{disabled ? 'disabled' : ''}}"
    disabled="{{disabled}}"
  >
    <view class="picker {{size}} {{bordered ? 'bordered' : ''}} {{className}}" style="{{style}}">
      <text class="placeholder" wx:if="{{placeholder && value === ''}}">{{placeholder}}</text>
      <text>{{value}}</text>
      <view class="picker-actions">
        <view class="iconfont icon-close-circle" style="color: #999;margin-right: 5px;" catchtap="reset" wx:if="{{resetable && value !== ''}}"></view>
        <icon name="arrow-down" size="mini" color="#999"></icon>
      </view>
    </view>
  </picker>
</template>

<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Index extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      mode: {
        type: String,
        default: 'date'
      },
      size: {
        type: String,
        default: 'normal'
      },
      start: {
        type: String,
        default: ''
      },
      end: {
        type: String,
        default: ''
      },
      value: {
        type: String,
        default: ''
      },
      fields: {
        type: String,
        default: 'day'
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      bordered: {
        type: [Boolean, String],
        default: true,
        coerce
      },
      resetable: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      placeholder: String
    }

    components = {
      icon: Icon
    }

    data = {
    }

    methods = {
      change (e) {
        this.value = e.detail.value
        this.$emit('change', this.value, e)
      },
      reset () {
        this.value = ''
        this.$emit('change', this.value)
      }
    }
  }
</script>
