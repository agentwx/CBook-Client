<style lang="less">
  @import "../styles/mixin";

  .checkbox {
    display: inline-block;
    border: 1px solid @color-border;
    background-color: #fff;
    border-radius: 50%;
    vertical-align: middle;
    transition: background-color .2s ease;

    &.checked {
      position: relative;
      background-color: @gcolor;
      border: none;

      &:before {
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        width: 50%;
        height: 25%;
        border-style: solid;
        border-color: #fff;
        border-width: 0 0 2px 2px;
        transform: translate(-50%, -70%) rotate(-45deg);
      }
    }

    &.large {
      width: 30px;
      height: 30px;
    }

    &.normal {
      width: 18px;
      height: 18px;
    }

    &.small {
      width: 15px;
      height: 15px;

      &:before {
        border-width: 0 0 1px 1px;
      }
    }

    &.readonly {
      pointer-events: none;
    }

    &.disabled {
      opacity: .7;
      pointer-events: none;
    }
  }
</style>

<template>
  <view class="checkbox {{size}} {{type}} {{checked ? 'checked' : ''}} {{readonly ? 'readonly' : ''}} {{disabled ? 'disabled' : ''}}" style="{{style}}" @tap="tap">
  </view>
</template>

<script>
  import wepy from 'wepy'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Index extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      size: {
        type: String,
        default: 'normal'
      },
      type: {
        type: String,
        default: 'primary'
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      checked: {
        type: [Boolean, String],
        default: false,
        coerce: coerce,
        twoWay: true
      },
      readonly: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      value: {
        type: null,
        default: ''
      }
    }

    components = {
    }

    data = {}

    methods = {
      tap($event) {
        this.checked = !this.checked
        this.$emit('change', this.value, this.checked, $event)
      }
    }
  }
</script>
