<style type="less">
  @import "../less/mixin";

  .list-item {
    .flex-v-center();
    padding: 24rpx 30rpx;
    background-color: #fff;

    &.bordered {
      border-top:2rpx solid @color-underline;
      border-bottom:2rpx solid @color-underline;
    }

    .list-item-bd {
      flex: 1;
    }

    .list-item-icon {
      margin-right: 10rpx;
    }

    &:active {
      background-color: @color-active;
    }

    &.hasArrow {
      &:after {
        content: '';
        display: inline-block;
        width: 16rpx;
        height: 16rpx;
        margin-right: 10rpx;
        border-width: 2rpx 2rpx 0 0;
        border-style: solid;
        border-color: #777;
        transform: rotate(45deg);
      }
    }
  }
</style>
<template>
  <view class="list-item {{hasArrow ? 'hasArrow' : ''}} {{bordered ? 'bordered' : ''}}" style="{{style}}" @tap="tap">
    <icon wx:if="{{icon}}" :name="icon" :size="iconSize" class="list-item-icon"></icon>
    <view class="list-item-bd">
      <slot></slot>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Listitem extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      icon: String,
      iconSize: {
        type: String,
        default: 'middle'
      },
      hasArrow: {
        type: [Boolean, String],
        default: true,
        coerce: coerce
      },
      bordered: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      }
    }
    components = {
      icon: Icon
    }
    data = {
    }
    methods = {
      tap ($event) {
        this.$emit('tap', Number(this.$index), $event)
      }
    }
  }
</script>
