<style lang="less">
  @import "../styles/mixins/common";

  .raty-wrap {
    display: inline-block;

    &.readonly {
      pointer-events: none;
    }

    .raty-item {
      margin-right: 2x;
    }

    .raty-value {
      margin-left: 8px;
      color: #999;
      font-size: 14px;
    }
  }
</style>

<template>
  <view class="raty-wrap {{readonly ? 'readonly' : ''}}" style="{{style}}">
    <repeat for="{{max}}">
      <text class="raty-item iconfont icon-star" style="{{iconSize}};color:{{index < ratyIndex ? activeColor : color}}" @tap="change({{index}})"></text>
    </repeat>
    <text class="raty-value" wx:if="{{showValue}}">{{value}}</text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { SIZE_MAP } from '../constants/size'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Index extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      max: {
        type: [Number, String],
        default: 5,
        coerce: v => +v
      },
      value: {
        type: [Number, String],
        default: 0,
        coerce: v => +v
      },
      color: {
        type: String,
        default: '#d3d3d3'
      },
      activeColor: {
        type: String,
        default: '#faa431'
      },
      size: {
        type: String,
        default: '16px'
      },
      readonly: {
        type: [Boolean, String],
        default: true,
        coerce: coerce
      },
      showValue: {
        type: [Boolean, String],
        default: true,
        coerce: coerce
      }
    }

    computed = {
      iconSize () {
        return `font-size:${SIZE_MAP[this.size] || this.size}`
      },
      ratyIndex () {
        return Math.floor(this.value)
      }
    }

    methods = {
      change (rateIndex, $e) {
        if (!this.readonly) {
          this.value = rateIndex + 1
          this.$emit('change', this.value, $e)
        }
      }
    }
  }
</script>
