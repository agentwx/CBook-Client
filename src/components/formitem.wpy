<style lang="less">
  @import "../less/mixin";

  .form-item {
    background-color: #fff;

    &:not(.nomargin) {
      margin-bottom: 20rpx;
    }
  }

  .form-item-inner {
    .flex-v-center();
    padding-left: 20rpx;
    padding-right: 20rpx;

    &.underline {
      border-bottom: 2rpx solid @color-underline;
    }
  }

  .form-item-label {
    display: inline-block;
    white-space: nowrap;
    margin-right: 16rpx;
    color: #888;
  }

  .form-item-bd {
    border-radius: 8rpx;
    flex: 1;
    .flex-v-center();

    > .input {
      width: 100%;
      padding: 12rpx 24rpx;
      font-size: 28rpx;
      display: block;
      box-sizing: border-box;
      flex: 1;

      &.large {
        height: @large;
        font-size: 32rpx;
      }
      &.normal {
        height: @normal;
      }
      &.small {
        height: @small;
      }
    }

    > .icon-left {
      margin-right: -18rpx;
      margin-top: -4px;
    }

    > .icon-right {
      display: flex;
      align-items: center;
      margin-left: -24rpx;
    }

    .icon-wrap {
      padding: 6rpx;
      margin-left: 4rpx;
    }

    &.bordered {
      border: 2rpx solid @color-border;
    }
  }
</style>
<template>
  <view class="form-item {{nomargin ? 'nomargin' : ''}} {{className}}" style="{{style}}">
    <view class="form-item-inner {{underline ? 'underline' : ''}}">
      <text wx:if="{{label}}" class="form-item-label" style="width:{{labelWidth}};">{{label}}</text>
      <view class="form-item-bd {{bordered ? 'bordered' : ''}}">
        <icon wx:if="{{icon}}" class="icon-left" color="#999" :name="icon" :size="size"/>
        <input wx:if="{{!password}}" type="{{type}}" class="input {{size}}" focus="{{focus}}" disabled="{{disabled}}"
               placeholder="{{placeholder}}" value="{{value}}" maxlength="{{maxlength}}" @tap="tap" @input="input"
               @focus="focus" @blur="blur" @confirm="confirm"/>
        <input wx:if="{{password}}" password="true" class="input {{size}}" focus="{{focus}}" disabled="{{disabled}}"
               placeholder="{{placeholder}}" value="{{value}}" maxlength="{{maxlength}}" @tap="tap" @input="input"
               @focus="focus" @blur="blur" @confirm="confirm"/>
        <view class="icon-right" wx:if="{{showClear || showEye}}">
          <view class="icon-wrap" wx:if="{{showClear}}" @tap="clearField"
                style="margin-top:-4rpx; display: {{shouldClearShow ? '' : 'none'}}">
            <iconclear size="small" color="#8a8a8a" name="close-circle"></iconclear>
          </view>
          <view class="icon-wrap" wx:if="{{showEye}}" @tap="togglePwdVisible">
            <iconeye color="#8a8a8a" :name.sync="eyeName"></iconeye>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Formitem extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      label: String,
      icon: String,
      labelWidth: {
        type: String,
        default: ''
      },
      size: {
        type: String,
        default: 'normal'
      },
      value: {
        type: [String, Number],
        default: '',
        twoWay: true
      },
      maxlength: {
        type: [String, Number],
        default: -1,
        coerce: v => +v
      },
      placeholder: String,
      bordered: {
        type: [Boolean, String],
        default: true,
        coerce: coerce
      },
      showClear: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      showEye: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      nomargin: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      underline: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      type: {
        type: String,
        default: 'text'
      },
      password: {
        type: String,
        default: ''
      },
      focus: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      }
    }

    components = {
      icon: Icon,
      iconclear: Icon,
      iconeye: Icon
    }

    data = {
      shouldClearShow: false
    }

    computed = {
      shouldClearShow() {
        return this.showClear ? this.value !== '' : false
      },
      eyeName() {
        return this.password ? 'eye-closed' : 'eye-opened'
      }
    }

    methods = {
      clearField() {
        this.value = ''
      },
      togglePwdVisible() {
        this.password = !this.password
      },
      tap(e) {
        this.$emit('tap', e.detail.value, e)
      },
      input(e) {
        this.value = e.detail.value
        this.$emit('input', e.detail.value, e)
      },
      focus(e) {
        this.$emit('focus', e.detail.value, e)
      },
      blur(e) {
        this.$emit('blur', e.detail.value, e)
      },
      confirm(e) {
        this.$emit('confirm', e.detail.value, e)
      }
    }
  }
</script>
