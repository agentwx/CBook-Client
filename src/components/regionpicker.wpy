<style lang="less">
  @import "../less/mixin";

  picker {
    flex: 1;
    width: 100%;
    border: 2rpx solid #ccc;
    background-color: #fff;
    border-radius: 8rpx;

    &.disabled {
      opacity: 0.7;
      pointer-events: none;
    }
  }

  .picker {
    padding: 12rpx 24rpx;
    font-size: 28rpx;
    box-sizing: border-box;
    .flex-v-center();
    justify-content: space-between;

    &.large {
      height: @large;
      font-size: 32rpx;
    }
    &.normal {
      height: @normal;
    }
    &.small {
      height: @small;
    }

    .icon {
      padding: 0;

      .icon-img {
        width: 20rpx !important;
        height: 20rpx !important;
        vertical-align: middle;
      }
    }
  }
</style>

<template>
  <picker mode="region"
          @change="change"
          value="{{value}}"
          custom-item="{{custom-item}}"
          class="{{disabled ? 'disabled' : ''}}"
          disabled="{{disabled}}"
  >
    <view class="picker {{size}} {{className}}" style="{{style}}">
      <text>{{value}}</text>
      <icon name="angle-down-black.png"></icon>
    </view>
  </picker>
</template>

<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Button extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      size: {
        type: String,
        default: 'normal'
      },
      value: {
        type: String,
        default: ''
      },
      'custom-item': {
        type: String,
        default: ''
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce: coerce
      }
    }

    components = {
      icon: Icon
    }

    data = {
    }

    methods = {
      change (e) {
        this.value = e.detail.value
        this.$emit('datetimechange', this.value, e)
      }
    }
  }
</script>
