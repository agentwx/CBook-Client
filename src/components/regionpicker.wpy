<style lang="less">
  @import "../styles/mixin";

  picker {
    flex: 1;
    width: 100%;

    &.disabled {
      opacity: 0.7;
      pointer-events: none;
    }
  }

  .picker {
    flex: 1;
    width: 100%;
    padding: 6px 12px;
    font-size: 14px;
    background-color: #fff;
    box-sizing: border-box;
    .flex-v-center();
    justify-content: space-between;

    &.bordered {
      border: .5px solid @border-color;
      border-radius: 4px;
    }

    &.large {
      height: @large;
      font-size: 16px;
    }

    &.normal {
      height: @normal;
    }

    &.small {
      height: @small;
    }

    .placeholder {
      color: #999;
      white-space: nowrap;
    }

    .picker-actions {
      .flex-v-center();
    }
  }
</style>

<template>
  <picker
    mode="region"
    @change="change"
    value="{{value}}"
    custom-item="{{customItem}}"
    class="{{disabled ? 'disabled' : ''}}"
    disabled="{{disabled}}"
  >
    <view class="form-item {{nomargin ? 'nomargin' : ''}}" style="{{style}}" wx:if="{{!useSlot}}">
      <view class="form-item-inner {{underline ? 'hairline--bottom' : ''}}">
        <text wx:if="{{label}}" class="form-item-label" style="width:{{labelWidth}};">{{label}}</text>
        <view class="form-item-bd {{bordered ? 'bordered' : ''}}">
          <icon wx:if="{{icon}}" class="icon-left" :type="iconType" color="#999" :name="icon" :size="size"/>
          <view class="picker {{size}} {{className}}" style="{{style}}">
            <text class="placeholder" wx:if="{{placeholder && valueStr === ''}}">{{placeholder}}</text>
            <text class="picker-value">{{valueStr}}</text>
            <view class="picker-actions">
              <view class="iconfont icon-close-circle" style="color: #999;margin-right: 5px;" catchtap="reset" wx:if="{{resetable && valueStr !== ''}}"></view>
              <iconangle name="arrow-down" color="#999"></iconangle>
            </view>
          </view>
        </view>
      </view>
    </view>
    <slot wx:else></slot>
  </picker>
</template>

<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = t =>
    typeof t === 'string' ? JSON.parse(t) : t

  export default class Index extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      label: String,
      icon: String,
      iconType: String,
      labelWidth: {
        type: String,
        default: ''
      },
      size: {
        type: String,
        default: 'normal'
      },
      value: {
        type: Array,
        default: [],
        twoWay: true
      },
      customItem: {
        type: String,
        default: ''
      },
      placeholder: String,
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      bordered: {
        type: [Boolean, String],
        default: true,
        coerce
      },
      underline: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      nomargin: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      useSlot: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      resetable: {
        type: [Boolean, String],
        default: false,
        coerce
      }
    }

    components = {
      icon: Icon,
      iconangle: Icon
    }

    data = {
    }

    computed = {
      valueStr () {
        return this.value.join(' ')
      }
    }

    methods = {
      change (e) {
        this.value = e.detail.value
        this.$emit('change', this.value, e)
      },
      reset () {
        this.value = []
        this.$emit('change', this.value)
      }
    }
  }
</script>
