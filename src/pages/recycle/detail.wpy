<style lang="less">
  @import '../../styles/mixins/common';
  @import '../../styles/mixins/ellipsis';

  page {
    background-color: #f7f7f7;
    padding-bottom: 10px;
  }

  .delivery-body {
    .flex-v-center();

    .geo-icon {
      margin-right: 10px;
    }
  }

  .delivery-hd {
    font-weight: bold;
    margin-bottom: 4px;

    .username {
      margin-right: 10px;
    }
  }

  .delivery-address,
  .delivery-picktime {
    color: #888;
    font-size: 13px;
    margin-bottom: 4px;
  }

  .book-body {
    .flex();
    padding-top: 5px;
    padding-bottom: 5px;
  }

  .book-cover {
    .flex-center();
    width: 80px;
    height: 98px;
    margin-right: 15px;
    overflow: hidden;

    image {
      width: 100%;
      height: 100%;
    }
  }

  .book-main {
    flex: 1;
    width: 100%;
    overflow: hidden;
    .flex-h-center();
    flex-direction: column;
    justify-content: space-between;
  }

  .book-hd {
    .title {
      .ellipsis();
      font-size: 15px;
      font-weight: bold;
      margin-bottom: 3px;
    }

    .desc {
      .light-font();
      .ellipsis();
      font-size: 12px;
      color: #999;
      margin-bottom: 2px;
    }
  }

  .book-specs {
    .flex();
    justify-content: space-between;

    .price {
      font-size: 15px;
    }

    .status {
      color: #09c8fe;
    }
  }

  .book-title {
    .flex-v-center();

    .icon {
      margin-right: 5px;
    }
  }

  .delivery-panel,
  .income-panel {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }

  .income-item {
    .flex();
    justify-content: space-between;
    padding: 3px 0;

    /*&:first-child {
      color: #888;
    }

    &:last-child {
      font-weight: bold;
    }*/
  }

  .order-panel {
    padding-top: 0;
    padding-bottom: 0;
  }

  .order-item {
    .flex-v-center();
    justify-content: space-between;
    padding: 2px 0;
    color: #888;
  }

  .copy-text {
    padding: 3px 8px;
  }

  .action-button {
    padding-top: 10px;
    padding-bottom: 10px;
    background-color: #fff;
    .flex-center();

    &:active {
      background-color: @color-active;
    }
  }

  .reason-title {
    margin-bottom: 20px;
    color: #888;
    text-align: center;
  }

  .reason-item {
    margin-bottom: 15px;
  }

  .reason-actions {
    btn {
      display: block;
      width: 40%;
    }
  }
</style>

<template>
  <panel>
    <steps stepIndex="{{stepIndex}}" items="{{stepItems}}"></steps>
  </panel>
  <panel custom-class="delivery-panel">
    <view class="delivery-body">
      <icon name="geo" size="20px" custom-class="geo-icon"></icon>
      <view class="delivery-main">
        <view class="delivery-hd">
          <text class="username">{{order.orderName}}</text>
          <text class="usertel">{{order.orderMobile}}</text>
        </view>
        <view class="delivery-address">{{order.orderProvince}} {{order.orderCity}} {{order.orderRegion}}{{order.orderAddress}}</view>
        <view class="delivery-picktime">预约上门取件时间: {{order.appointment}}</view>
      </view>
    </view>
  </panel>
  <panel>
    <view class="panel-title" slot="title">
      <view class="book-title">
        <icon name="library" size="20px"></icon>
        <text>图书列表</text>
      </view>
    </view>
    <repeat for="{{order.bookInfos}}" key="index">
      <view class="book-body">
        <view class="book-cover">
          <image src="{{item.smallIcon}}" mode="widthFix" lazyload="true"></image>
        </view>
        <view class="book-main">
          <view class="book-hd">
            <view class="title">{{item.name}}</view>
            <view class="desc">{{item.author}}</view>
            <view class="desc">{{item.press}}</view>
          </view>
          <view class="book-specs">
            <text class="price">￥{{item.costPrice}}</text>
            <text class="status">{{item.bookStatusText}}</text>
          </view>
        </view>
      </view>
    </repeat>
  </panel>
  <panel custom-class="income-panel">
    <view class="income-item">
      <text>预计收入</text>
      <text>￥{{order.income}}</text>
    </view>
    <!--<view class="income-item">
      <text>实际收入</text>
      <text>￥{{order.income}}</text>
    </view>-->
  </panel>
  <panel custom-class="order-panel">
    <view class="order-item">
      <text>订单编号：{{order.orderCode}}</text>
      <text @tap="copyOrderNum" class="copy-text">复制</text>
    </view>
    <view class="order-item">
      <text>创建时间：{{order.createTime}}</text>
    </view>
  </panel>
  <view class="action-button" @tap="callService">
    <icon name="service" />
    <text>召唤客服</text>
  </view>
  <view class="action-button" @tap="cancelOrder">
    <text>取消订单</text>
  </view>

  <modal visible="{{modalVisible}}" show-close="false">
    <view class="reason-title">取消订单原因</view>
    <view class="reasons-wrap">
      <repeat for="{{cancelReasons}}" key="index">
        <view class="reason-item" @tap="selectReason({{index}})">
          <checkbox checked="{{item.checked}}" style="margin-right: 8px;" />
          <text>{{item.text}}</text>
        </view>
      </repeat>
    </view>
    <view class="reason-actions flex-between">
      <btn type="plain" size="small" @tap="handleModal({{false}})">取消</btn>
      <btn bordered="true" size="small" @tap="handleModal({{true}})">确定</btn>
    </view>
  </modal>
</template>

<script>
  import wepy from 'wepy'

  import { toast } from '../../utils/util'

  const BOOK_STATUS_MAP = {
    0: '待审核',
    1: '审核通过'
  }

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '回收订单详情',
      usingComponents: {
        icon: '/components/icon/index',
        steps: '/components/steps/index',
        panel: '/components/panel/index',
        modal: '/components/modal/index',
        btn: '/components/button/index',
        checkbox: '/components/check-box/index'
      }
    }

    data = {
      stepItems: ['线上审核', '物流取件', '平台取件', '验收书籍', '书费到账'],
      cancelReasons: [
        {
          checked: false,
          text: '不想买了'
        },
        {
          checked: false,
          text: '填错信息，重新下单'
        },
        {
          checked: false,
          text: '其它原因'
        }
      ],
      order: {},
      modalVisible: true
    }

    computed = {
      stepIndex () {
        return this.order.orderStatus || 0
      }
    }

    methods = {
      async copyOrderNum () {
        await wepy.setClipboardData({data: this.order.orderCode})
        toast.success('复制成功')
      },
      callService () {
        wx.makePhoneCall({
          phoneNumber: '13746584675'
        })
      },
      selectReason (index) {
        this.cancelReasons = this.cancelReasons.map((reason, i) => ({...reason, chceked: index === i}))
      },
      handleModal (flag) {
        console.log(flag)
        this.modalVisible = false
        if (flag) {
          // TODO
        }
      }
    }

    onLoad({ order }) {
      if (order) {
        order = JSON.parse(order)
        order.bookInfos = order.bookInfos.map(item =>
          ({...item, bookStatusText: BOOK_STATUS_MAP[item.bookStatus]})
        )
        this.order = order
      }
    }
  }
</script>
