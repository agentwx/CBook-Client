<style lang="less">
  @import '../../less/mixin';

  page {
    background-color: #f7f7f7;
  }

  .address-new-wrap {
    box-shadow: 0 16rpx 36rpx rgba(0,0,0,.04);
  }

  .address-defset {
    padding: 30rpx 20rpx;
    .flex-v-center();

    text {
      margin-left: 16rpx;
    }
  }

  .address-new-button {
    margin-top: 10rpx;
    margin-left: 6%;
    margin-right: 6%;
  }
</style>
<template>
  <view class="address-new-wrap">
    <useritem label="联系人" labelWidth="4em" bordered="false" nomargin="true" underline="true" :value.sync="name"></useritem>
    <mobileitem label="手机号" labelWidth="4em" bordered="false" nomargin="true" underline="true" :value.sync="mobile"></mobileitem>
    <regionpicker label="收货地址" labelWidth="4em" bordered="false" nomargin="true" underline="true" :value.sync="region"></regionpicker>
    <detailitem label="详细地址" labelWidth="4em" bordered="false" nomargin="true" :value.sync="address"></detailitem>
  </view>
  <view class="address-defset" @tap="toggleDefault">
    <checkbox readonly="true" :checked.sync="isDefault" />
    <text>设为默认地址</text>
  </view>
  <button class="address-new-button" @tap.user="saveAddress">
    {{actionMode === 'edit' ? '修改' : '保存'}}
  </button>
</template>

<script>
  import wepy from 'wepy'
  import Formitem from '@/components/formitem'
  import Checkbox from '@/components/checkbox'
  import Button from '@/components/button'
  import Regionpicker from '@/components/regionpicker'
  import fetch from '../../service/fetch'
  import {toast, getPrevPage} from '../../utils/util'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '新增地址'
    }

    components = {
      regionpicker: Regionpicker,
      useritem: Formitem,
      mobileitem: Formitem,
      addritem: Formitem,
      detailitem: Formitem,
      checkbox: Checkbox,
      button: Button
    }

    data = {
      name: '',
      mobile: '',
      region: [],
      address: '',
      isDefault: false,
      actionMode: 'add'
    }

    methods = {
      toggleDefault () {
        this.isDefault = !this.isDefault
      },
      async saveAddress () {
        if (this.name.trim() === '') {
          return toast.error('请填写联系人')
        }

        if (this.mobile.trim() === '') {
          return toast.error('请填写手机号')
        }

        if (!/^1[3456789]\d{9}$/.test(this.mobile)) {
          return toast.error('手机号不合法')
        }

        if (this.region.length === 0) {
          return toast.error('请选择收货地址')
        }

        if (this.address.trim() === '') {
          return toast.error('请填写详细地址')
        }

        const province = this.region[0]
        const city = this.region[1]
        const region = this.region[2]

        let params = {
          name: this.name,
          mobile: this.mobile,
          province,
          city,
          region,
          address: this.address,
          isDefault: this.isDefault ? 1 : 0
        }

        if (this.actionMode === 'edit') {
          await fetch.post('/user/address/update', {...params, code: this.code})
        } else {
          await fetch.post('/user/address/add', params)
        }
        getPrevPage().loadData()
        this.$back()
      }
    }

    onLoad(params) {
      if (params.actionMode === 'edit') {
        this.actionMode = params.actionMode
        this.code = params.code
        this.name = params.name
        this.mobile = params.mobile
        this.region = [params.province, params.city, params.region]
        this.address = params.address
        this.isDefault = JSON.parse(params.isDefault)
        wx.setNavigationBarTitle({
          title: '修改地址'
        })
      }
    }
  }
</script>
