<style lang="less">
  @import '../../styles/mixins/common';

  page {
    background-color: #fff;
  }

  .ucbg-wrap {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    z-index: -1;

    image {
      width: 100%;
      height: 164px;
    }
  }

  .uc-userinfo {
    position: relative;
    padding: 49px 12% 0 12%;
    color: #fff;
    .flex-v-center();

    .uc-avatar {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      overflow: hidden;
      margin-right: 15px;

      image {
        width: 100%;
        height: 100%;
      }
    }

    .uc-userinfo-main {
      flex: 1;
    }

    .uc-username {
      font-size: 16px;
      margin-bottom: 6px;
    }

    .uc-usertype {
      display: inline-block;
      padding: 1px 8px;
      border: .5px solid #fff;
      border-radius: 30px;
      font-size: 12px;
    }
  }

  .uc-assets-panel {
    margin-left: 15px;
    margin-right: 15px;
    margin-top: 30px;
    background-color: #fff;
    border-radius: 6px;
    .flex-v-center();
    box-shadow: 0 6px 10px rgba(0,0,0,.05);
  }

  .uc-assets-item {
    position: relative;
    flex: 1;
    padding: 25px;
    text-align: center;

    .assets-value {
      font-size: 18px;
      margin-bottom: 2px;
    }

    .assets-name {
      color: #888;
    }

    &:not(:last-child):after {
      content: '';
      position: absolute;
      left: 100%;
      top: 30px;
      bottom: 30px;
      border-left: .5px solid @color-border;
    }
  }

  .order-entry-panel {
    margin-top: 18px !important;
    margin-bottom: 0 !important;
    padding-bottom: 0 !important;

    .panel-title {
      margin-bottom: 0;
      padding-bottom: 10px;
    }
  }

  .to-orders {
    font-size: 14px;
    font-weight: normal;
    padding: 3px 0 3px 8px;
  }

  .order-entry-body {
    .flex();

    icon-item {
      font-size: 13px;
      flex: 1;
      .flex-h-center();
    }
  }

  .uc-listitem {
    margin-bottom: 0 !important;

    .icon {
      color: @gcolor;
    }
  }
</style>

<template>
  <view class="ucbg-wrap">
    <image src="../../assets/images/ucenter_top_bg.jpg"></image>
  </view>

  <view class="uc-userinfo">
    <view class="uc-avatar">
      <open-data type="userAvatarUrl"></open-data>
    </view>
    <view class="uc-userinfo-main">
      <view class="uc-username">
        <open-data type="userNickName" lang="zh_CN"></open-data>
      </view>
      <view class="uc-usertype">{{userInfo.vipLevelText}}</view>
    </view>
  </view>

  <view class="uc-assets-panel">
    <view class="uc-assets-item" @tap="viewCoins">
      <view class="assets-value">{{filters.toFixed(userInfo.starPoint)}}</view>
      <view class="assets-name">星星币</view>
    </view>
    <view class="uc-assets-item">
      <view class="assets-value">0</view>
      <view class="assets-name">优惠券</view>
    </view>
  </view>

  <panel custom-class="order-entry-panel">
    <view class="panel-title hairline--bottom" slot="title" @tap="goToOrders('0')">
      <text>买书订单</text>
      <text class="to-orders">全部订单</text>
    </view>
    <view class="order-entry-body">
      <icon-item icon="prepay" iconType="svg" @tap="goToOrders('1')">待付款</icon-item>
      <icon-item icon="presend" iconType="svg" @tap="goToOrders('2')">待发货</icon-item>
      <icon-item icon="precollect" iconType="svg" @tap="goToOrders('3')">待收货</icon-item>
      <icon-item icon="order_done" iconType="svg" @tap="goToOrders('4')">已完成</icon-item>
    </view>
  </panel>

  <view class="spliter"></view>

  <list-item-group custom-class="uc-listitem">
    <list-item icon="order" @tap="goToRecycleOrders">回收订单</list-item>
    <list-item icon="geo" @tap="goToAddress">地址管理</list-item>
    <list-item icon="user-profile" @tap="goToProfile">个人资料</list-item>
    <list-item icon="service" @tap="showActionSheet">联系客服</list-item>
  </list-item-group>

  <view class="spliter"></view>

  <action-sheet
    show="{{actionShow}}"
    actions="{{serviceActions}}"
    cancelText="取消"
    @select="selectService"
    @cancel="hideActionSheet"
    @close="hideActionSheet"
  >
  </action-sheet>
</template>

<script>
  import wepy from 'wepy'
  import fetch from '../../service/fetch'
  import filters from '../../filters/number.wxs'
  import { getStore } from 'wepy-redux'

  const store = getStore()

  const vipLevelMap = {
    0: '普通会员',
    1: 'vip 1级',
    2: 'vip 2级'
  }

  export default class Index extends wepy.page {
    config = {
      navigationBarBackgroundColor: '#09bfff',
      navigationBarTextStyle: '#fff',
      navigationBarTitleText: '个人中心',
      usingComponents: {
        'list-item-group': '/components/list-item-group/index',
        'list-item': '/components/list-item/index',
        'icon-item': '/components/icon-item/index',
        'action-sheet': '/components/action-sheet/index',
        'panel': '/components/panel/index',
        'icon': '/components/icon/index'
      }
    }

    data = {
      actionShow: false,
      userInfo: {},
      serviceActions: [
        { name: '微信客服', action: 'contact', openType: 'contact' },
        { name: '电话客服', action: 'makeCall' }
      ]
    }

    wxs = {
      filters
    }

    methods = {
      viewCoins () {
        this.$navigate('/pages/starcoin/list')
      },
      goToOrders (index) {
        this.toOrders(index)
      },
      goToRecycleOrders () {
        this.$navigate('/pages/recycle/list')
      },
      goToAddress () {
        this.$navigate('/pages/address/address')
      },
      goToProfile () {
        this.$navigate('/pages/profile/profile')
      },
      selectService (e) {
        const item = e.detail.value
        if (item.action === 'makeCall') {
          wx.makePhoneCall({
            phoneNumber: '18502120206'
          })
        }
      },
      showActionSheet () {
        this.actionShow = true
      },
      hideActionSheet () {
        this.actionShow = false
      }
    }

    toOrders (tabIndex) {
      this.$navigate('/pages/orderlist/orderlist', { tabIndex })
    }

    async getUserInfo () {
      const { datas: userInfo } = await fetch.post('user/baseinfo', {}, false)
      this.userInfo = {...userInfo, vipLevelText: vipLevelMap[userInfo.vipLevel]}
      this.$apply()
      store.dispatch({
        type: 'ADD_USER_INFO',
        payload: {
          data: userInfo
        }
      })
    }

    onShow () {
      const { recycles, shopCart } = store.getState()
      const recycleCount = recycles.length
      const cartCount = shopCart.reduce((prev, cur) => prev + cur.COUNT, 0)

      if (recycleCount > 0) {
        wx.setTabBarBadge({
          index: 1,
          text: recycleCount.toString()
        })
      } else {
        wx.removeTabBarBadge({
          index: 1
        })
      }

      if (cartCount > 0) {
        wx.setTabBarBadge({
          index: 2,
          text: cartCount.toString()
        })
      } else {
        wx.removeTabBarBadge({
          index: 2
        })
      }

      this.getUserInfo()
    }

    onLoad() {
    }
  }
</script>
