<style lang="less">
  @import '../../less/mixin';

  page {
    height: 100%;
  }

  .home-search-wrap {
    padding: 30rpx 20rpx;
  }

  .home-search {
    .flex-v-center();
    padding-left: 30rpx;
    background-color: #fff;
    border-radius: 60rpx;
    overflow: hidden;
    box-shadow: 0 0 40rpx rgba(0, 0, 0, 0.1);
  }

  .search-input {
    width: 100%;
    padding: 20rpx 30rpx 20rpx 16rpx;
    height: 80rpx;
  }

  .home-banner {
    position: relative;
    height: 236rpx;
    margin-left: 20rpx;
    margin-right: 20rpx;
    overflow: hidden;
    margin-bottom: 20rpx;
    border-radius: 12rpx;
    box-shadow: 0 10rpx 24rpx rgba(0, 0, 0, 0.08);

    image {
      width: 100%;
      height: 100%;
      display: block;
    }
  }

  .filter-toolbar-wrap {
    height: 78rpx;
  }

  .filter-toolbar {
    position: relative;
    z-index: 5;

    &.fixed {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      box-shadow: 0 10rpx 16rpx rgba(0,0,0,.08);

      .filter-toolbar-inner {
        background-color: #fff;
      }
    }
  }

  .filter-toolbar-inner {
    position: relative;
    .flex-v-center();
    justify-content: space-between;
    padding-left: 20rpx;
    padding-right: 20rpx;
    height: 78rpx;
    z-index: 5;

    .filter-itemtype {
      flex: 1;
      padding-top: 20rpx;
      padding-bottom: 20rpx;
      color: #666;
      text-align: center;

      &.selected {
        font-weight: bold;
        color: #333;
      }

      &.sort {
        text-align: left;
      }

      &.filter {
        text-align: right;
        &.selected {
          font-weight: normal;
          color: #27a1f8;
        }
      }
    }
  }

  .filter-sublayer {
    position: absolute;
    left: 0;
    top: 100%;
    right: 0;
    background-color: #fff;
    box-shadow: 0 12rpx 24rpx rgba(0, 0, 0, 0.07);
    .animation(slide-down .3s ease);
  }

  .filter-mask {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(0,0,0,.5);
  }

  .filter-itemsort-wrap{
    padding-bottom: 24rpx;
  }

  .filter-itemsort {
    padding: 24rpx;
    .flex();
    justify-content: space-between;

    > icon {
      visibility: hidden;
    }

    &.selected {
      color: #27a1f8;
      > icon {
        visibility: visible;
      }
    }

    &:active {
      background-color: @color-active;
    }
  }

  .filter-catelog {
    padding: 20rpx 20rpx 0;
  }

  .filter-catelog-hd {
    .flex-v-center();
    margin-bottom: 30rpx;

    .icon {
      margin-right: 10rpx;
    }
  }

  .filter-catelog-bd {
    margin-bottom: 40rpx;
  }

  .filter-catelog-item {
    display: inline-block;
    padding: 8rpx 24rpx;
    border: 1rpx solid @color-border;
    border-radius: 60rpx;
    margin: 0 16rpx 16rpx 0;
    color: #666;
    font-size: 24rpx;

    &.selected {
      background-color: #daeaf6;
      border-color: #daeaf6;
      color: #27a1f8;
    }
  }

  .product-panel {
    .flex();
    padding: 20rpx;
  }

  .product-cover {
    width: 240rpx;
    height: 294rpx;
    margin-left: 10rpx;
    margin-right: 30rpx;
    overflow: hidden;

    > image {
      display: block;
      width: 100%;
      height: 100%;
    }
  }

  .product-panel-body {
    flex: 1;
    .flex();
    flex-direction: column;
    justify-content: space-between;

    .product-caption {
      font-size: 30rpx;
      margin-bottom: 10rpx;
    }

    .product-press {
      .light-font();
      font-size: 24rpx;
      color: #888;
    }

    .product-desc {
      .light-font();
      font-size: 24rpx;
      color: #888;
      margin-top: 6rpx;
      margin-bottom: 12rpx;
    }

    .product-tags {
      margin-top: 16rpx;
    }
  }

  .product-subinfo {
    .flex-v-center();

    .product-price {
      font-size: 32rpx;
      color: #eb5a21;

      .unit {
        font-size: 24rpx;
        margin-right: 6rpx;
      }
    }

    .product-tax {
      color: #27a1f8;
    }

    .split {
      width: 0;
      display: inline-block;
      border-left: 1rpx solid #ddd;
      margin-left: 16rpx;
      margin-right: 16rpx;
      height: 30rpx;
    }
  }
</style>
<template>
  <view class="home-search-wrap">
    <view class="home-search" @tap="toSearch">
      <icon name="find" custom-style=" font-size: 36rpx;color: #888;"></icon>
      <input type="text" class="search-input" placeholder="搜索书名、作者" disabled></input>
    </view>
  </view>

  <view class="home-banner">
    <image src="../../images/home_banner.jpg"></image>
  </view>

  <view id="filter_bar" class="filter-toolbar-wrap" @touchmove.stop="true">
    <view class="filter-toolbar {{filterBarFixed ? 'fixed' : ''}}">
      <view class="filter-toolbar-inner">
        <view class="filter-itemtype sort {{filterVisible && filterType=='sort' ? 'selected' : ''}}" @tap="showFilter('sort')">
          综合排序<icon size="x-small" name="caret-down"></icon>
        </view>
        <view class="filter-itemtype {{filterType=='popular' ? 'selected' : ''}}" @tap="showFilter('popular')">
          人气优先
        </view>
        <view class="filter-itemtype {{filterType=='new' ? 'selected' : ''}}" @tap="showFilter('new')">
          新书优先
        </view>
        <view class="filter-itemtype filter {{filterVisible && filterType=='catelog' ? 'selected' : ''}}" @tap="showFilter('catelog')">
          筛选<icon size="x-small" name="filter"></icon>
        </view>
      </view>
      <view class="filter-sublayer" hidden="{{!filterVisible}}">
        <view class="filter-itemsort-wrap" wx:if="{{filterType=='sort'}}">
          <view class="filter-itemsort" @tap="filterByTag('综合排序')">
            <text>综合排序</text>
            <icon name="check-o"></icon>
          </view>
          <view class="filter-itemsort" @tap="filterByTag('人气优先')">
            <text>人气优先</text>
            <icon name="check-o"></icon>
          </view>
          <view class="filter-itemsort selected" @tap="filterByTag('好评优先')">
            <text>好评优先</text>
            <icon name="check-o"></icon>
          </view>
          <view class="filter-itemsort" @tap="filterByTag('新书优先')">
            <text>新书优先</text>
            <icon name="check-o"></icon>
          </view>
          <view class="filter-itemsort" @tap="filterByTag('智能排序')">
            <text>智能排序</text>
            <icon name="check-o"></icon>
          </view>
        </view>

        <view class="filter-catelog" wx:if="{{filterType=='catelog'}}">
          <view class="filter-catelog-hd">
            <icon name="leaf" type="svg"></icon>
            年龄（单选）
          </view>
          <view class="filter-catelog-bd">
            <view class="filter-catelog-item" @tap="filterByTag('0-2岁')">0-2岁</view>
            <view class="filter-catelog-item selected" @tap="filterByTag('2-4岁')">2-4岁</view>
            <view class="filter-catelog-item" @tap="filterByTag('4-6岁')">4-6岁</view>
            <view class="filter-catelog-item" @tap="filterByTag('6-8岁')">6-8岁</view>
            <view class="filter-catelog-item" @tap="filterByTag('8岁以上')">8岁以上</view>
          </view>
          <view class="filter-catelog-hd">
            <icon name="catelog" type="svg"></icon>
            分类（可多选）
          </view>
          <view class="filter-catelog-bd">
            <view class="filter-catelog-item" @tap="filterByTag('亲子共读')">亲子共读</view>
            <view class="filter-catelog-item" @tap="filterByTag('育儿教育')">育儿教育</view>
            <view class="filter-catelog-item" @tap="filterByTag('儿童启蒙')">儿童启蒙</view>
            <view class="filter-catelog-item" @tap="filterByTag('经典童话')">经典童话</view>
            <view class="filter-catelog-item" @tap="filterByTag('育儿宝典')">育儿宝典</view>
            <view class="filter-catelog-item" @tap="filterByTag('启发想象')">启发想象</view>
          </view>
          <view class="filter-catelog-hd">
            <icon name="lang" type="svg"></icon>
            语言（单选）
          </view>
          <view class="filter-catelog-bd">
            <view class="filter-catelog-item" @tap="filterByTag('中文')">中文</view>
            <view class="filter-catelog-item" @tap="filterByTag('英文')">英文</view>
            <view class="filter-catelog-item" @tap="filterByTag('中英文')">中英文</view>
            <view class="filter-catelog-item" @tap="filterByTag('中文注音')">中文注音</view>
          </view>
        </view>
      </view>
    </view>

    <view class="filter-mask"
          wx:if="{{filterVisible}}"
          @tap="hideFilter">
    </view>

  </view>

  <view class="product-listview">
    <repeat for="{{products}}">
      <view class="product-panel" @tap="viewDetail({{item}})">
        <view class="product-cover">
          <image src="{{item.smallImageUrl}}" lazyload="true"></image>
        </view>
        <view class="product-panel-body">
          <view class="product-maininfo">
            <view class="product-caption">{{item.name}}</view>
            <view class="product-press">{{item.author}}</view>
            <view class="product-desc">{{item.press}}</view>
            <raty value="{{item.doubanScore}}"></raty>
            <view class="product-tags">
              <repeat for="{{item.tags}}">
                <tag>{{item}}</tag>
              </repeat>
            </view>
          </view>
          <view class="product-subinfo">
            <view class="product-price">
              <text class="unit">￥</text>
              <text>{{item.price}}</text>
            </view>
            <view class="split"></view>
            <view class="product-tax">书费价 ￥{{item.costPrice}}</view>
          </view>
        </view>
      </view>
    </repeat>
  </view>

  <weui-loading visible="{{isLoading}}"></weui-loading>
  <modal-spinner wx:if="{{isLoading && isModalSpinShow}}" />
</template>

<script>
import wepy from 'wepy'
import { getNodeRect } from '../../utils/util'
import fetch from '../../service/fetch'

import { getStore } from 'wepy-redux'

const store = getStore()

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '星月童书',
    enablePullDownRefresh: true,
    usingComponents: {
      'modal-spinner': '/components/modal-spinner/index',
      'weui-loading': '/components/weui-loading/index',
      'raty': '/components/raty/index',
      'icon': '/components/icon/index',
      'tag': '/components/tag/index'
    }
  }

  components = {
  }

  data = {
    isLoading: true,
    isModalSpinShow: false,
    filterBarFixed: false,
    filterVisible: false,
    filterType: 'none',
    products: []
  }

  methods = {
    toSearch () {
      this.$navigate('/pages/search/search')
    },
    viewDetail (item) {
      this.$navigate('/pages/detail/detail', item)
    },
    showFilter (type) {
      if (this.isLoading) return

      if ((type === 'sort' || type === 'catelog') && this.lastScrollTop !== Math.floor(this.filterBarTop) && !this.filterBarFixed) {
        wx.pageScrollTo({
          scrollTop: this.filterBarTop + 1
        })
        setTimeout(() => {
          this.filterType = type
          this.filterVisible = true
          this.$apply()
        }, 300)
      } else {
        this.filterType = type
        this.filterVisible = true
      }

      if (type === 'popular' || type === 'new') {
        this.loadByfilterTag(type)
      }
    },
    filterByTag (name) {
      this.loadByfilterTag(name)
    }
  }

  loadByfilterTag (name) {
    this.isModalSpinShow = true
    this.filterVisible = false
    this.reloadProducts()
  }

  hideFilter () {
    this.filterType = 'none'
    this.filterVisible = false
  }

  getFilterBarTop() {
    getNodeRect('#filter_bar').then(rect => {
      this.filterBarTop = rect.top
    })
  }

  async loadProducts (params = {filter: [], sort: []}) {
    params = {
      offset: this.pageNum,
      limit: 15,
      ...params
    }

    try {
      this.isLoading = true
      let res = await fetch.post('/sales/list', params, false)
      let items = res.datas.Items || []
      this.products = this.products.concat(items)
      store.dispatch({type: 'ADD_PRODUCTS', payload: {products: items}})
      if (items.length > 0) {
        this.pageNum++
      }
    } finally {
      this.isLoading = false
      this.isModalSpinShow = false
      this.$apply()
    }
  }

  async reloadProducts () {
    this.pageNum = 1
    await this.loadProducts()
  }

  onPageScroll (e) {
    let isFixed = false
    this.lastScrollTop = e.scrollTop

    if (e.scrollTop > this.filterBarTop) {
      isFixed = true
    } else {
      isFixed = false
    }

    if (isFixed !== this.filterBarFixed) {
      this.filterBarFixed = isFixed
      this.$apply()
    }
  }

  onReachBottom () {
    this.loadProducts()
  }

  async onPullDownRefresh () {
    this.isModalSpinShow = true
    await this.reloadProducts()
    wx.stopPullDownRefresh()
  }

  onShareAppMessage () {
  }

  onLoad() {
    this.getFilterBarTop()
    this.$parent.ready(() => {
      this.reloadProducts()
    })
  }
}
</script>
