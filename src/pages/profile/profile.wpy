<style lang="less">
  @import '../../styles/mixin';

  page {
    background-color: #f5f5f5;
    padding-bottom: 20rpx;
  }

  .profile {
    padding: 40rpx 0 60rpx;
    background-color: #fff;
    .flex-v-center();
    flex-direction: column;

    .avatar {
      width: 140rpx;
      height: 140rpx;
      border-radius: 50%;
      overflow: hidden;

      image {
        width: 100%;
        height: 100%;
      }
    }

    .nickname {
      color: #888;
      margin-top: 16rpx;
    }
  }

  .list-item-inner {
    .flex();
    justify-content: space-between;

    text {
      color: #888;
    }
  }

  .profile-listitem {
    margin-bottom: 20rpx;
  }

  .delete-button {
    padding: 24rpx 0;
    text-align: center;
    color: #888;
    background-color: #fff;
    margin-bottom: 20rpx;

    &:active {
      background-color: @color-active;
    }
  }

  .profile-action {
    margin: 60rpx 10% 0;
  }
</style>
<template>
  <view class="profile">
    <view class="avatar">
      <open-data type="userAvatarUrl"></open-data>
    </view>
    <view class="nickname">
      <open-data type="userNickName" lang="zh_CN"></open-data>
    </view>
  </view>

  <view class="profile-listitem">
    <list-item show-arrow="false">
      <view class="list-item-inner">
        <text class="label">性别</text>
        <text class="value">{{gender}}</text>
      </view>
    </list-item>
    <list-item bordered="false" show-arrow="false">
      <view class="list-item-inner">
        <text class="label">地区</text>
        <text class="value">{{location}}</text>
      </view>
    </list-item>
  </view>

  <repeat for="{{relationships}}" key="index">
    <view class="profile-listitem" @tap="editRelationship({{item}})">
      <list-item>
        <view class="list-item-inner">
          <text class="label">宝宝昵称</text>
          <text class="value">{{item.nickName}}</text>
        </view>
      </list-item>
      <list-item>
        <view class="list-item-inner">
          <text class="label">宝宝生日</text>
          <text class="value">{{item.birthday}}</text>
        </view>
      </list-item>
      <list-item bordered="false">
        <view class="list-item-inner">
          <text class="label">亲子关系</text>
          <text class="value">{{item.relationshipStr}}</text>
        </view>
      </list-item>
    </view>

    <view class="delete-button" wx:if="{{index > 0}}" @tap="deleteRelationship({{item.code}})">删除宝贝信息</view>
  </repeat>

  <view class="profile-action">
    <btn @tap="addProfile">添加宝贝信息</btn>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import fetch from '../../service/fetch'
  import { toast, confirm } from '../../utils/util'

  const GENDER_MAP = {
    0: '未知',
    1: '男',
    2: '女'
  }

  const relationshipsMap = {
    0: '未知',
    1: '父子',
    2: '父女',
    3: '母子',
    4: '母女'
  }

  @connect({
    gender ({userInfo}) {
      return GENDER_MAP[userInfo.gender]
    },
    location ({userInfo}) {
      return `${userInfo.province} ${userInfo.city}`
    }
  })
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '宝贝信息',
      usingComponents: {
        'list-item': '/components/list-item/index',
        'btn': '/components/button/index'
      }
    }

    components = {
    }

    data = {
      relationships: []
    }

    methods = {
      addProfile () {
        this.$navigate('/pages/profile/add')
      },
      editRelationship (item) {
        this.$navigate('/pages/profile/add', {actionMode: 'edit', params: JSON.stringify(item)})
      },
      async deleteRelationship (code) {
        const isOK = await confirm('确定要删除吗?')
        if (isOK) {
          await fetch.post('/user/children/delete', {code})
          toast.success('删除成功')
          this.loadData()
        }
      },
      loadRelationships () {
        this.loadData()
      }
    }

    async loadData () {
      let res = await fetch.post('/user/children/list')
      this.relationships = res.datas.map(item => ({...item, relationshipStr: relationshipsMap[item.relationship]}))
      this.$apply()
    }

    onLoad() {
      this.loadData()
    }
  }
</script>
